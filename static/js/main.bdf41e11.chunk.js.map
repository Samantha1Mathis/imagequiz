{"version":3,"sources":["communication/api.js","components/Home.js","components/Login.js","components/NavigationBar.js","components/QuizQuestions.js","components/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["apiHost","api","getQuizzes","fetch","then","response","json","getFlowers","addScores","score","username","quizID","method","header","body","JSON","stringify","Home","props","useState","flowers","setFlowers","onImage","event","onQuiz","target","id","useEffect","length","x","catch","e","console","log","style","textAlign","images","i","element","push","onClick","className","to","Figure","Image","width","height","alt","name","src","picture","Caption","createFlowers","Login","history","useHistory","email","setEmail","password","setPassword","Form","onSubmit","trim","onLoggedIn","Group","controlId","Label","Control","type","placeholder","onChange","value","Button","variant","NavigationBar","Navbar","bg","expand","Brand","hred","Toggle","aria-controls","Collapse","Nav","Link","QuizQuestions","setScore","buttonToggle","setButton","quizzes","setQuiz","onAnswer","quiz","question","choices","answer","Row","Col","Card","Header","as","Body","Img","Title","disabled","Quiz","count","setCount","lastScore","result","quizId","window","location","reload","App","localStorage","getItem","setUsername","Container","fluid","exact","path","quizIndex","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdf41e11.chunk.js","sourcesContent":["let apiHost = \"https://samantha1mathis-imagequiz.herokuapp.com\"\n\nlet getQuizzes = () =>{\n    return fetch(apiHost + \"/quizzes\")\n    .then(response => response.json());\n};\nlet getFlowers = () =>{\n    return fetch(apiHost + \"/flowers\")\n    .then(response => response.json());\n};\n\nlet addScores = (score, username, quizID) => {\n    return fetch(apiHost + \"/score\", {\n        method: 'post',\n        header: {\n            'Content-Type':'application/json'\n        },\n        body: JSON.stringify({score:score, username: username, quizID: quizID})\n    });\n}\nlet api = {\n    getQuizzes: getQuizzes,\n    getFlowers: getFlowers,\n    addScores: addScores\n};\n\n\nexport default api;\n","import { Link } from \"react-router-dom\";\nimport Figure from 'react-bootstrap/Figure';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {useState, useEffect} from 'react';\nimport api from \"../communication/api\";\n\n\nfunction Home(props) {\n    const [flowers, setFlowers] = useState([]);\n\n    function onImage(event){\n        props.onQuiz(event.target.id);\n    }\n \n    useEffect(() => {\n        if(flowers.length === 0) {\n            api.getFlowers()\n            .then(x => setFlowers(x))\n            .catch(e => console.log(e));\n        }\n    });\n\n    return (\n        <div>\n            <h2 style={{ textAlign: \"center\" }}>Home Page</h2>\n            {createFlowers()}\n        </div>\n    );\n\n    function createFlowers() {\n        let images = [];\n        let i = 0;\n        for (let element in flowers) {\n            images.push(<Link id={i} onClick={onImage} className='link' to=\"/quiz\">\n                <Figure id={i}>\n                    <Figure.Image id={i} style={{ width: '200px', height:'150px'}}\n                        alt={flowers[element].name}\n                        src={flowers[element].picture} />\n                    <Figure.Caption id={i}>{flowers[element].name}</Figure.Caption>\n                </Figure>\n            </Link>)\n            i++;\n        }\n        return images;\n    }\n\n}\n\nexport default Home;","import Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useHistory } from 'react-router-dom';\nimport { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nexport default function Login(props) {\n    const history = useHistory();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    function onLoginSubmitted(){\n        if (email.trim().length === 0 || password.trim().length === 0) {\n            return;\n        }\n        props.onLoggedIn(email);\n        history.push('/');\n    }\n\n    function onEmailChanged(event){\n        setEmail(event.target.value);\n    }\n\n    function onPasswordChanged(event){\n        setPassword(event.target.value);\n    }\n\n    return (\n        <Form onSubmit={onLoginSubmitted}>\n            <Form.Group controlId=\"email\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={onEmailChanged} />\n            </Form.Group>\n\n            <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={onPasswordChanged} />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n                Submit\n      </Button>\n        </Form>\n\n\n\n    );\n}","import {Link} from \"react-router-dom\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from 'react-bootstrap/Navbar'\n\nfunction NavigationBar(props){\n    return (\n        <Navbar bg= \"dark\" expand=\"lg\" variant=\"dark\">\n            <Navbar.Brand hred=\"#Home\">ImageQuiz</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n            \n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link><Link className=\"link\" to=\"/\">Home</Link></Nav.Link>\n                    <br></br>\n                    <Nav.Link>{props.username === '' ?\n                    <Link className='link' to=\"/login\">Login</Link>\n                    :\n                    <Link className='link' to=\"/login\">{props.username}, Logout</Link>\n                     }\n            </Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n\n}\nexport default NavigationBar;","import Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport {useState, useEffect} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport api from '../communication/api';\n\nexport default function QuizQuestions(props) {\n    const [score, setScore] = useState(\"\");\n    const [buttonToggle, setButton] = useState(false);\n    const [quizzes, setQuiz] = useState([]);\n    function onAnswer(event){\n        setButton(true);\n        //Check if the button selected contained the correct answer\n        if (quizzes[props.quiz][props.question].choices[event.target.id] === quizzes[props.quiz][props.question].answer) {\n            setScore(\"Correct! \"+ quizzes[props.quiz][props.question].answer);\n            props.onAnswer(true);\n        } else {\n            setScore(\"Wrong! The correct answer was '\"+ quizzes[props.quiz][props.question].answer + \"'\");\n            props.onAnswer(false);\n        }\n    }\n    useEffect(() => {\n        if(quizzes.length === 0) {\n            api.getQuizzes()\n            .then(x => setQuiz(x))\n            .catch(e => console.log(e));\n        }\n    });\n\n    function createQuiz(){\n        if (quizzes.length === 0){\n            return [];\n        }\n\n    return (\n\n        <Card style={{ width: '750px' }}>\n        <Card.Header as=\"h5\">Question {props.question + 1}</Card.Header>\n        <Card.Body>\n            <Row>\n                <Col>\n                <Card.Img style={{ width: '200px', height:'180px'}} variant=\"top\" alt={quizzes[props.quiz][props.question].answer} src={quizzes[props.quiz][props.question].picture}/>\n                </Col>\n\n                <Col>\n                    <Card.Title>Which flower is shown?</Card.Title>\n                    <Row>\n                    <Button variant=\"outline-primary\" disabled={buttonToggle} id={0} onClick={onAnswer} > {quizzes[props.quiz][props.question].choices[0]}</Button>\n                    </Row>\n                    <br></br>\n                    <Row>\n                    <Button variant=\"outline-primary\" disabled={buttonToggle} id={1} onClick={onAnswer} > {quizzes[props.quiz][props.question].choices[1]}</Button>\n                    </Row>\n                    <br></br>\n                    <Row>\n                    <Button variant=\"outline-primary\" disabled={buttonToggle} id={2} onClick={onAnswer} > {quizzes[props.quiz][props.question].choices[2]}</Button>\n                    </Row>\n                    <br></br>\n                    <Row>\n                    <br></br>{score}   \n                    </Row>\n                </Col>\n            </Row>    \n        </Card.Body>\n        </Card>\n\n  );\n}\n    return (\n        <Row>\n            <Col>\n                {createQuiz()}\n            </Col>\n        </Row>\n    );\n}","import Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport QuizQuestions from './QuizQuestions';\nimport { useState } from 'react';\nimport api from '../communication/api';\n\nexport default function Quiz(props) {\n    const [score, setScore] = useState(0);\n    const [count, setCount] = useState(1);\n\n    function onRestart(event){\n        window.location.reload();\n    }\n    function onAnswer(answer) {\n        setCount(count + 1);\n        let lastScore = 0;\n        if (answer) {\n            setScore(score + 1);\n            lastScore = 1;\n        }\n\n        if (count >= 6){\n            let result = {score: score+lastScore, username:props.username, quizId:props.quiz};\n            api.addScores(result)\n            .then(() => console.log(\"score was posted to server successfully\"))\n            .catch(e => console.log(e));\n        }\n\n    }\n\n    return (\n        <Col>\n            <br></br>\n            <Row>\n                <h2>Score: {score}/6</h2>\n                &nbsp;\n                &nbsp;\n                &nbsp;\n                &nbsp;\n                <Button onClick={onRestart}>Restart Quiz</Button>\n            </Row>\n            <br></br>\n            <Row>\n                <QuizQuestions onAnswer={onAnswer} quiz={props.quiz} question={0} />\n            </Row>\n            <Row>\n                <QuizQuestions onAnswer={onAnswer} quiz={props.quiz} question={1} />\n            </Row>\n            <Row>\n                <QuizQuestions onAnswer={onAnswer} quiz={props.quiz} question={2} />\n            </Row>\n            <Row>\n                <QuizQuestions onAnswer={onAnswer} quiz={props.quiz} question={3} />\n            </Row>\n            <Row>\n                <QuizQuestions onAnswer={onAnswer} quiz={props.quiz} question={4} />\n            </Row>\n            <Row>\n                <QuizQuestions onAnswer={onAnswer} quiz={props.quiz} question={5} />\n            </Row>\n        </Col>\n    );\n}","import { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport NavigationBar from \"./components/NavigationBar\";\nimport { useState } from 'react';\nimport Quiz from './components/Quiz';\n\nfunction App() {\n    const [username, setUsername] = useState(localStorage.getItem('username') || '');\n    const [quiz, setQuiz] = useState(localStorage.getItem('quizIndex') || 0);\n\n    function onLoggedIn(email){\n        localStorage.setItem('username', email);\n        setUsername(email);\n    }\n\n    function onQuiz(quizIndex){\n        localStorage.setItem('quizIndex', quizIndex);\n        setQuiz(quizIndex);\n    }\n    return (\n        <HashRouter>\n            <Container fluid>\n                <NavigationBar username={username} />\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home onQuiz={onQuiz}/>\n                    </Route>\n                    <Route path=\"/login\" >\n                        <Login onLoggedIn={onLoggedIn} />\n                    </Route>\n                    <Route path=\"/quiz\" >\n                        <Quiz quiz={quiz} username={username}/>\n                    </Route>\n                </Switch>\n            </Container>\n        </HashRouter>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}